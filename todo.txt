Rapid Sublime v.1.0 TODO:
------------------------
TODO:

Must have:


Bug report(s) 
-------------
-> Create new (lua) function with only one indented line -> no folding marker appears
-> Create new (lua) function with two or more indeted lines -> folding marker appears, but cursor is thrown in the beginning of the document

Backburner
----------
- Mouse folding to work like alt+f (not possible at the moment, ST3 limitation)
- Run RapidOutputView in separate thread? (any advantage with this?)
- Debugger?

Done in 0.0.13
----------------------
- "Thread started" print is not shown anymore
- Autocomplete gives two spaces in front of a variable, fix it
- Code is cleaned
- Autocomplete parser speedup:
	- Thread is created only in startup, it is then kept alive
	- All files are scanned only at startup
	- When a file is saved, only its function definitions are updated into parser
- Plugin_host.exe testing, for some reason it does not crash anymore
	- Test again if there are steps to reproduce crashing

Done in 0.0.12
----------------------
- Autocomplete bug fixing
	-> Explicit definition loading with alt+l
	-> Force ST3 to use custom autocomplete in all cases
- Esc disables search first, then server output view
- Lua coloring in RapidOutputView 
- Rapid find edge case handling ('*' and cursor are at the start or at the end of the word)
- Fold local functions with alt+f and alt+c
- Autocomplete uses same parsing as rapid_find
- Autocomplete suggestions are not case-sensitive
- Eval does not work when function has space(s) instead of tab indentation
- Handle settings file parsing error (wrong/missing values)

Done in 0.0.11
----------------------
- Custom autocomplete with ctrl+space
- Autocomplete is triggered only with ctrl+space
- Fixed bug in 'help' (F1) command

Done in 0.0.10
----------------------
- Autocomplete and tab traversal

Done in 0.0.9
----------------------
- Help class methods find with wildcard
- F5 window commandiksi text commandin sijaan
- Some autocomplete functionality

Done in 0.0.8
----------------------
- alt+f to work with function end lines
- F1 working in all cases (fix: works ok if you have loaded the correct project)
- Folding removes empty lines at block end to be optional feature (hide empty lines will be default)
- Mouse clicking in server output view 
- Help (F1) system with Python

Done in 0.0.7
----------------------
- Project settings are parsed from JSON file
	- Project settings file extension is *.rapid_sublime
	- Rapid.exe path is parsed from project settings file
- Component.lua:50 cursor jumps weirdly when folding a function (could not reproduce this)
- alt+e should not move focus to server output view
- esc to close only current context
- alt+f inside a function should not ignore empty lines 
- folding breaks with multiline strings (DungeonEditor.lua) (fully fixed)
	- fold all fixed
	- fold block partially fixed
	- alt+f works when cursor is on an unintented row inside a function block
- speed up block folding/unfolding (alt+f)

Done in 0.0.6
----------------------
- shutting down server output view shuts down the group
- alt+c works in search 
- esc shuts down server output view

Done in 0.0.5
----------------------
- When evaluating block, the number of the first row must be sent to server
- When evaluating block, the first line of the block is always printed to server output
- resume (ctrl + t)
- f1 connects to server if not already connected
- remove empty line between two folded functions 
- folding rules now work
- double click works when rapid_sublime is running

Fixed between pre-alpha and 0.0.4:
---------------------------------
- Highlight trace row when double clicking (done: underline)
- Stack trace traveling

- "Fold all" folds functions in a more compact space
- "Fold all" folds only blocks which start with "function()" 
- "Server Output Window" opens always in group 2
- Remove empty line from Server Output Window
- When looking an open file, check all Sublime windows, not just active one (in all cases)
- F1 (show methods)
- fold block breaks if no "end" (0 indent line) is found
- hlsl syntax highlighting (hlsl package works after closing and starting ST3)
- Stacktrace: try to find files from all folders (in all windows)
- Check project start file from all folders (in all windows) [if multiple project files are in project, the first is used ]
- Load st packages from custom location? (google) -> seems to not to be possible -> fix: use package manager to load from github
- Key bindings etc. to preferences -> package settings -> Rapid
